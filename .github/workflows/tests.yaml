name: Tests
on:
  push:
    branches:
      - main
      - 'renovate/**'
  pull_request:
    branches:
      - main
      - 3.x

jobs:
  tests:
    name: Tests (PHP ${{ matrix.php-version }} & ${{ matrix.dependencies }} dependencies)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version: ["8.1", "8.2", "8.3"]
        dependencies: ["locked", "highest", "lowest"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Prepare environment
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer:v2
          coverage: none

      # Install dependencies
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2
        with:
          dependency-versions: ${{ matrix.dependencies }}

      # Run tests
      - name: Run tests
        run: composer test

  coverage:
    name: Test coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Prepare environment
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          tools: composer:v2
          coverage: pcov

      # Install dependencies
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2

      # Run tests
      - name: Build coverage directory
        run: mkdir -p .build/coverage
      - name: Run tests with coverage
        run: composer test:coverage

      # Upload artifact
      - name: Fix coverage path
        working-directory: .build/coverage
        run: sed -i 's#/home/runner/work/cache-warmup/cache-warmup#${{ github.workspace }}#g' clover.xml
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: .build/coverage/clover.xml
          retention-days: 7

  coverage-report:
    name: Report test coverage
    runs-on: ubuntu-latest
    needs: coverage
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Download artifact
      - name: Download coverage artifact
        id: download
        uses: actions/download-artifact@v4
        with:
          name: coverage

      # CodeClimate
      - name: CodeClimate report
        uses: paambaati/codeclimate-action@v5.0.0
        if: env.CC_TEST_REPORTER_ID
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageLocations: |
            ${{ steps.download.outputs.download-path }}/clover.xml:clover

      # Coveralls
      - name: Coveralls report
        uses: coverallsapp/github-action@v2
        with:
          file: ${{ steps.download.outputs.download-path }}/clover.xml

  e2e:
    name: Tests (E2E)
    runs-on: ubuntu-latest
    env:
      DOCKER_TAG: eliashaeussler/cache-warmup:testing
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Prepare environment
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          tools: composer:v2,phive

      # Compile PHAR
      - name: Install box
        run: phive install --trust-gpg-keys 2DF45277AEF09A2F humbug/box
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2
        with:
          composer-options: "--no-dev"
      - name: Compile PHAR
        run: ./tools/box compile --with-docker

      # Build Docker image
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: ${{ env.DOCKER_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Run test with PHAR
      - name: Test PHAR
        run: .build/cache-warmup.phar https://www.google.com/sitemap.xml --limit 1

      # Run test with Docker
      - name: Test Docker
        run: docker run --rm ${{ env.DOCKER_TAG }} https://www.google.com/sitemap.xml --limit 1
